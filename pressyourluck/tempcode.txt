	aSortedZones = MainAssistant.aSortedZonesNums.sort(function(elem){return Math.random()>.5});
	//fill in some vertical and horizontal lines
	//aSortedZones = aZones.sort(function(elem){return Math.random()>.5});
	for(var n=0; n < aSortedZones.length; n++)
	{
		var tempZone =  aSortedZones[n].zone;
		var newX = aSortedZones[n].x;
		var newY = aSortedZones[n].y;
		while(validCell(newX, newY) && MainAssistant.aaoMap[newY][newX].zone == tempZone)
		{
			newX--;
			while( validCell(newX, newY) && !MainAssistant.aaoMap[newY][newX].isOccupied)
			{
				occupyCell(MainAssistant.aaoMap[newY][newX], tempZone);
				newY--;
			}
		}
	}

	//fill in some vertical and horizontal lines
	aSortedZones = MainAssistant.aSortedZonesNums.sort(function(elem){return Math.random()>.5});
	for(var n=0; n < aSortedZones.length; n++)
	{
		var tempZone =  aSortedZones[n].zone;
		var newX = aSortedZones[n].x;
		var newY = aSortedZones[n].y;
		while(validCell(newX, newY) && MainAssistant.aaoMap[newY][newX].zone == tempZone)
		{
			newY--;
			while( validCell(newX, newY) && !MainAssistant.aaoMap[newY][newX].isOccupied)
			{
				occupyCell(MainAssistant.aaoMap[newY][newX], tempZone);
				newX--;
			}
		}
	}

	//fill in some vertical and horizontal lines	
	//aSortedZones = aZones.sort(function(elem){return Math.random()>.5});
	for(var n=0; n < aSortedZones.length; n++)
	{
		var tempZone =  aSortedZones[n].zone;
		var newX = aSortedZones[n].x;
		var newY = aSortedZones[n].y;
		while(validCell(newX, newY) && MainAssistant.aaoMap[newY][newX].zone == tempZone)
		{
			newX++;
			while( validCell(newX, newY) && !MainAssistant.aaoMap[newY][newX].isOccupied)
			{
				occupyCell(MainAssistant.aaoMap[newY][newX], tempZone);
				newY++;
			}
		}
	}

	//fill in some vertical and horizontal lines
	//aSortedZones = aZones.sort(function(elem){return Math.random()>.5});
	for(var n=0; n < aSortedZones.length; n++)
	{
		var tempZone =  aSortedZones[n].zone;
		var newX = aSortedZones[n].x;
		var newY = aSortedZones[n].y;
		while(validCell(newX, newY) && MainAssistant.aaoMap[newY][newX].zone == tempZone)
		{
			newY++;
			while( validCell(newX, newY) && !MainAssistant.aaoMap[newY][newX].isOccupied)
			{
				occupyCell(MainAssistant.aaoMap[newY][newX], tempZone);
				newX++;
			}
		}
	}	
